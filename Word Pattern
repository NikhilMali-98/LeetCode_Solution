public class Solution {
    public bool WordPattern(string pattern, string s) {
    string[] arr = s.Split(' ');
    
    if(arr.Length != pattern.Length) return false;

    Dictionary<char, string> map = new Dictionary<char, string>();
    Dictionary<string, char> reverseMap = new Dictionary<string, char>();

    for(int i = 0; i < pattern.Length; i++)
    {
        char ch = pattern[i];
        string word = arr[i];
         if (map.ContainsKey(ch)) 
            {
                if (map[ch] != word) return false;
            } 
                else 
                {
                    if (reverseMap.ContainsKey(word)) return false;
                    map.Add(ch, word);
                    reverseMap.Add(word, ch);
                }
    }
       return true; 
    }
}
 
